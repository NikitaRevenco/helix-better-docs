<div id="hexagon-grid-wrapper">
  <div id="hexagon-grid" style="--amount: 5;">
      {Array.from({ length: 10 }, (_, i) => 
        <div class="hexagon-container" style={`--counter: ${Math.floor((i + 1) / 3)};`} >
          <div class="hexagon" />
        </div>
      )}
  </div>
</div>

<style>
  #hexagon-grid-wrapper {
    position: absolute;
    top: 0;
    right: 0;
    z-index: -10;
  }
  #hexagon-grid {
  	 position: relative;
  	 padding: 0;
  	 margin: 0;
  	 list-style-type: none;
  	 display: grid;
  	 grid-template-columns: repeat(var(--amount), 1fr 2fr) 1fr;
  	 grid-gap: 2.5rem 5rem;
  }
  .hexagon-container {
  	 position: relative;
  	 grid-row: calc(var(--counter) + var(--counter)) / span 2;
  	 filter: drop-shadow(0 0 10px rgba(68, 68, 68, 0.08));
  	 height: 0;
  	 padding-bottom: 90%;
  }
  .hexagon {
  	 position: absolute;
  	 height: 100%;
  	 width: 100%;
  	 background-color: hsla(var(--bossanova), 0.08);
  	 clip-path: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);
  }
	.hexagon-container:nth-of-type(5n + 1) {
		 grid-column: 1 / span 3;
	}
	.hexagon-container:nth-of-type(5n + 2) {
		 grid-column: 3 / span 3;
		 grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
	}
	.hexagon-container:nth-of-type(5n + 3) {
		 grid-column: 5 / span 3;
	}
	.hexagon-container:nth-of-type(5n + 4) {
		 grid-column: 7 / span 3;
		 grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
	}
	.hexagon-container:nth-of-type(5n + 5) {
		 grid-column: 9 / span 3;
	}
</style>
